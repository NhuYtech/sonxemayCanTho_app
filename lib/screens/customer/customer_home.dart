// customer_home.dart
import 'package:flutter/material.dart';
import '../../widgets/header.dart';
import '../profile.dart'; // Import CommonProfile

class CustomerHome extends StatefulWidget {
  final String name;
  const CustomerHome({super.key, required this.name});

  @override
  State<CustomerHome> createState() => _CustomerHomeState();
}

class _CustomerHomeState extends State<CustomerHome> {
  int _selectedIndex = 0; // Index c·ªßa tab ƒë∆∞·ª£c ch·ªçn trong BottomNavigationBar

  late final List<Widget>
  _pages; // Danh s√°ch c√°c m√†n h√¨nh t∆∞∆°ng ·ª©ng v·ªõi m·ªói tab

  // D·ªØ li·ªáu gi·∫£ ƒë·ªãnh cho c√°c th·∫ª th·ªëng k√™ tr√™n trang ch·ªß c·ªßa kh√°ch h√†ng.
  // Trong ·ª©ng d·ª•ng th·ª±c t·∫ø, b·∫°n s·∫Ω fetch d·ªØ li·ªáu n√†y t·ª´ API ho·∫∑c database.
  String _customerOrdersCount = '12 ƒë∆°n h√†ng';
  String _pendingSupportTickets = '3 y√™u c·∫ßu';
  String _loyaltyPoints = '5,000 ƒëi·ªÉm';

  @override
  void initState() {
    super.initState();
    // Kh·ªüi t·∫°o danh s√°ch c√°c m√†n h√¨nh khi widget ƒë∆∞·ª£c t·∫°o
    _pages = [
      _buildHomeTab(), // Tab "Trang ch·ªß"
      const Center(child: Text('üì¶ Danh s√°ch ƒë∆°n h√†ng')), // Tab "ƒê∆°n h√†ng"
      const Center(child: Text('üí¨ Tin nh·∫Øn')), // Tab "Tin nh·∫Øn"
      CommonProfile(name: widget.name, role: 'customer'), // Tab "T√†i kho·∫£n"
    ];

    // B·∫°n c√≥ th·ªÉ th√™m logic fetch d·ªØ li·ªáu cho dashboard kh√°ch h√†ng ·ªü ƒë√¢y
    _fetchCustomerDashboardData();
  }

  /// Ph∆∞∆°ng th·ª©c gi·∫£ ƒë·ªãnh ƒë·ªÉ fetch d·ªØ li·ªáu cho dashboard c·ªßa kh√°ch h√†ng.
  /// Trong th·ª±c t·∫ø, b·∫°n s·∫Ω g·ªçi API ho·∫∑c database ·ªü ƒë√¢y.
  void _fetchCustomerDashboardData() async {
    // Simulate a network delay
    await Future.delayed(const Duration(seconds: 1));
    setState(() {
      _customerOrdersCount = '15 ƒë∆°n h√†ng';
      _pendingSupportTickets = '1 y√™u c·∫ßu';
      _loyaltyPoints = '5,250 ƒëi·ªÉm';
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white, // M√†u n·ªÅn c·ªßa Scaffold
      body:
          _pages[_selectedIndex], // Hi·ªÉn th·ªã m√†n h√¨nh t∆∞∆°ng ·ª©ng v·ªõi tab ƒë∆∞·ª£c ch·ªçn
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _selectedIndex, // Tab hi·ªán t·∫°i ƒë∆∞·ª£c ch·ªçn
        onTap: (int index) {
          setState(() {
            _selectedIndex =
                index; // C·∫≠p nh·∫≠t index c·ªßa tab khi ng∆∞·ªùi d√πng ch·∫°m v√†o
          });
        },
        selectedItemColor: Colors.red, // M√†u c·ªßa icon v√† label khi ƒë∆∞·ª£c ch·ªçn
        unselectedItemColor:
            Colors.grey, // M√†u c·ªßa icon v√† label khi kh√¥ng ƒë∆∞·ª£c ch·ªçn
        items: const [
          // C√°c item trong BottomNavigationBar
          BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Trang ch·ªß'),
          BottomNavigationBarItem(icon: Icon(Icons.list), label: 'ƒê∆°n h√†ng'),
          BottomNavigationBarItem(icon: Icon(Icons.chat), label: 'Tin nh·∫Øn'),
          BottomNavigationBarItem(icon: Icon(Icons.person), label: 'T√†i kho·∫£n'),
        ],
      ),
    );
  }

  /// X√¢y d·ª±ng m√†n h√¨nh tab Trang ch·ªß cho kh√°ch h√†ng.
  /// Bao g·ªìm Header v√† danh s√°ch c√°c th·∫ª th√¥ng tin.
  Widget _buildHomeTab() {
    return SafeArea(
      child: Column(
        children: [
          // S·ª≠ d·ª•ng widget Header ƒë√£ import
          Header(name: widget.name), // Truy·ªÅn t√™n ng∆∞·ªùi d√πng v√†o Header
          const SizedBox(
            height: 16,
          ), // Kho·∫£ng c√°ch gi·ªØa Header v√† n·ªôi dung ch√≠nh
          // N·ªôi dung ch√≠nh c·ªßa tab Trang ch·ªß
          Expanded(
            child: ListView(
              padding: const EdgeInsets.symmetric(
                horizontal: 16,
              ), // Padding cho ListView
              children: [
                // C√°c th·∫ª th√¥ng tin v·ªõi d·ªØ li·ªáu ƒë·ªông cho kh√°ch h√†ng
                _buildStatCard(
                  'T·ªïng ƒë∆°n h√†ng c·ªßa b·∫°n:',
                  _customerOrdersCount, // S·ª≠ d·ª•ng bi·∫øn d·ªØ li·ªáu gi·∫£ ƒë·ªãnh
                  Icons.shopping_bag,
                  const Color(0xFFE3F2FD), // Light blue
                ),
                _buildStatCard(
                  'Y√™u c·∫ßu h·ªó tr·ª£ ƒëang ch·ªù:',
                  _pendingSupportTickets, // S·ª≠ d·ª•ng bi·∫øn d·ªØ li·ªáu gi·∫£ ƒë·ªãnh
                  Icons.support_agent,
                  const Color(0xFFFFFDE7), // Light yellow
                ),
                _buildStatCard(
                  'ƒêi·ªÉm t√≠ch l≈©y:',
                  _loyaltyPoints, // S·ª≠ d·ª•ng bi·∫øn d·ªØ li·ªáu gi·∫£ ƒë·ªãnh
                  Icons.star,
                  const Color(0xFFE8F5E9), // Light green
                ),
                // B·∫°n c√≥ th·ªÉ th√™m c√°c th·∫ª kh√°c nh∆∞ "∆Øu ƒë√£i ƒë·∫∑c bi·ªát", "S·∫£n ph·∫©m y√™u th√≠ch" v.v.
              ],
            ),
          ),
        ],
      ),
    );
  }

  /// Widget d√πng ƒë·ªÉ t·∫°o m·ªôt th·∫ª th√¥ng tin v·ªõi ti√™u ƒë·ªÅ, gi√° tr·ªã, icon v√† m√†u n·ªÅn.
  /// T∆∞∆°ng t·ª± nh∆∞ _buildStatCard trong manager.dart nh∆∞ng ƒë∆∞·ª£c ƒëi·ªÅu ch·ªânh cho m·ª•c ƒë√≠ch kh√°ch h√†ng.
  Widget _buildStatCard(
    String title,
    String value,
    IconData icon,
    Color color,
  ) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12), // Kho·∫£ng c√°ch d∆∞·ªõi m·ªói th·∫ª
      padding: const EdgeInsets.all(16), // Padding b√™n trong th·∫ª
      decoration: BoxDecoration(
        color: color, // M√†u n·ªÅn c·ªßa th·∫ª
        borderRadius: BorderRadius.circular(12), // Bo tr√≤n g√≥c
        boxShadow: [
          // Th√™m b√≥ng ƒë·ªï nh·∫π ƒë·ªÉ th·∫ª n·ªïi b·∫≠t h∆°n
          BoxShadow(
            color: Colors.grey.withOpacity(0.2),
            spreadRadius: 1,
            blurRadius: 3,
            offset: const Offset(0, 2), // V·ªã tr√≠ b√≥ng ƒë·ªï
          ),
        ],
      ),
      child: Row(
        children: [
          Icon(icon, size: 28, color: Colors.black), // Icon c·ªßa th·∫ª
          const SizedBox(width: 16), // Kho·∫£ng c√°ch gi·ªØa icon v√† n·ªôi dung
          Expanded(
            child: Column(
              crossAxisAlignment:
                  CrossAxisAlignment.start, // CƒÉn ch·ªânh vƒÉn b·∫£n sang tr√°i
              children: [
                Text(
                  title, // Ti√™u ƒë·ªÅ c·ªßa th·∫ª (v√≠ d·ª•: "T·ªïng ƒë∆°n h√†ng c·ªßa b·∫°n:")
                  style: const TextStyle(
                    fontSize: 16,
                    color: Colors.black54,
                  ), // M√†u ch·ªØ nh·∫°t h∆°n cho ti√™u ƒë·ªÅ
                ),
                const SizedBox(
                  height: 4,
                ), // Kho·∫£ng c√°ch gi·ªØa ti√™u ƒë·ªÅ v√† gi√° tr·ªã
                Text(
                  value, // Gi√° tr·ªã th·ªëng k√™ (v√≠ d·ª•: "12 ƒë∆°n h√†ng")
                  style: const TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ), // In ƒë·∫≠m v√† l·ªõn h∆°n cho gi√° tr·ªã
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
